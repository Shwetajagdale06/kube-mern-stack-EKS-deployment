name: CI/CD to AWS EKS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      FRONTEND_REPO: ${{ secrets.ECR_REPO_FRONTEND }}
      BACKEND_REPO: ${{ secrets.ECR_REPO_BACKEND }}
      IMAGE_TAG: ${{ github.sha }}  # use commit SHA for versioning

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Frontend image
      run: |
        docker build -t $FRONTEND_REPO:$IMAGE_TAG ./frontend
        docker push $FRONTEND_REPO:$IMAGE_TAG

    - name: Build and push Backend image
      run: |
        docker build -t $BACKEND_REPO:$IMAGE_TAG ./backend
        docker push $BACKEND_REPO:$IMAGE_TAG

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    - name: Patch frontend deployment with new image
      run: |
        kubectl set image deployment/frontend frontend=$FRONTEND_REPO:$IMAGE_TAG

    - name: Patch backend deployment with new image
      run: |
        kubectl set image deployment/backend backend=$BACKEND_REPO:$IMAGE_TAG

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f ./k8s/

    - name: Restart frontend deployment
      run: |
        kubectl rollout restart deployment/frontend
